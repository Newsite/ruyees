package cn.xdf.me.otp.model.sys;import java.sql.Timestamp;import java.util.List;import javax.persistence.AttributeOverride;import javax.persistence.AttributeOverrides;import javax.persistence.Column;import javax.persistence.Embedded;import javax.persistence.Entity;import javax.persistence.OneToMany;import javax.persistence.Table;import javax.persistence.Transient;import org.apache.commons.lang3.StringUtils;import org.hibernate.annotations.Cache;import org.hibernate.annotations.CacheConcurrencyStrategy;import org.hibernate.annotations.Cascade;import cn.xdf.me.otp.model.IdEntity;import cn.xdf.me.otp.model.NotifyEntity;import cn.xdf.me.otp.utils.ComUtils;@Entity@Table(name = "SYS_ORG_PERSON_TEMP")@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)public class SysOrgPersonTemp extends IdEntity {	/**	 * 	 */	private static final long serialVersionUID = 1L;	/**	 * 是否入职	 */	private String fdIsEmp;	/**	 * 对应部门编码	 */	private String depatId;	/**	 * 对应部门名称	 */	private String deptName;	/**	 * 随机码	 */	private String randomCode;	/**	 * 是否已经注册	 */	private String isRegistered;	/**	 * 邮件发送人	 */	private String senderId;	/**	 * 注册发起人	 */	private String registerId;	/**	 * 注册时间	 */	private Timestamp registerTime;	/**	 * 邮件发送时间	 */	private Timestamp sendMailTime;	/**	 * 注册方式	 */	private String registerType;	/**	 * 身份证号码	 */	private String fdIdentityCard;	/**	 * 头像url	 */	private String fdIcoUrl;	/**	 * 密码	 */	private String fdPassword;	/**	 * 性别	 */	private String fdSex;	/**	 * 生日	 */	private String fdBirthDay;	/**	 * 血型	 */	private String fdBloodType;	/**	 * 微博ID	 */	private String fdMicroBlog;	/**	 * 证书	 */	private String fdCertificate;	/**	 * 爱好	 */	private String fdHobby;	/**	 * 曾经工作	 */	private String fdOldHobby;	/**	 * 自豪事情	 */	private String fdPride;	/**	 * 遗憾事情	 */	private String fdPity;	/**	 * 梦想事情	 */	private String fdDram;	/**	 * 新教师工作经历	 */	private List<WorkHistory> workHistory;	/**	 * 新教师教育背景	 */	private List<EducationBackground> education;	public SysOrgPersonTemp() {	}	public SysOrgPersonTemp(String fdId) {		this.fdId = fdId;	}	// /**	// * 姓名	// */	// private String realName;	// /**	// * 姓名	// *	// */	// public String getRealName() {	// return realName;	// }	//	// /**	// * 姓名	// *	// * @param realName	// */	// public void setRealName(String realName) {	// this.realName = realName;	// }	// /**	// * 对应邮箱	// */	// private String fdEmail;	//	// /**	// * 邮件地址	// *	// */	// public String getFdEmail() {	// return fdEmail;	// }	//	// public void setFdEmail(String fdEmail) {	// this.fdEmail = fdEmail;	// }	/**	 * 0:未入职 1:在职	 * 	 */	public String getFdIsEmp() {		return fdIsEmp;	}	/**	 * 0：未入职 1：入职	 * 	 * @param fdIsEmp	 */	public void setFdIsEmp(String fdIsEmp) {		this.fdIsEmp = fdIsEmp;	}	/**	 * 对应的人员部门id	 * 	 */	public String getDepatId() {		return depatId;	}	/**	 * 对应人员的部门id	 * 	 * @param depatId	 */	public void setDepatId(String depatId) {		this.depatId = depatId;	}	/**	 * 部门名称	 * 	 * @return	 */	public String getDeptName() {		return deptName;	}	/**	 * 部门名称	 * 	 * @param deptName	 */	public void setDeptName(String deptName) {		this.deptName = deptName;	}	/**	 * 随机码	 * 	 */	public String getRandomCode() {		return randomCode;	}	/**	 * 随机码	 * 	 * @param randomCode	 */	public void setRandomCode(String randomCode) {		this.randomCode = randomCode;	}	/**	 * 是否已注册 0:未注册 1:已注册	 * 	 */	public String getIsRegistered() {		return isRegistered;	}	/**	 * 是否已注册	 * 	 * @param	 */	public void setIsRegistered(String isRegistered) {		this.isRegistered = isRegistered;	}	/**	 * 邮件发送人	 * 	 */	public String getSenderId() {		return senderId;	}	/**	 * 邮件发送人	 * 	 * @param senderId	 */	public void setSenderId(String senderId) {		this.senderId = senderId;	}	/**	 * 注册时间	 * 	 */	public Timestamp getRegisterTime() {		return registerTime;	}	/**	 * 注册时间	 * 	 * @param registerTime	 */	public void setRegisterTime(Timestamp registerTime) {		this.registerTime = registerTime;	}	/**	 * 邮件发送时间	 * 	 */	public Timestamp getSendMailTime() {		return sendMailTime;	}	/**	 * 邮件发送时间	 * 	 * @param sendMailTime	 */	public void setSendMailTime(Timestamp sendMailTime) {		this.sendMailTime = sendMailTime;	}	/**	 * 注册方式	 * 	 */	public String getRegisterType() {		return registerType;	}	/**	 * 注册方式 0:管理员添加 1:接收邮件注册	 * 	 * @param registerType	 */	public void setRegisterType(String registerType) {		this.registerType = registerType;	}	/**	 * 注册发起人	 * 	 * @param registerType	 */	public String getRegisterId() {		return registerId;	}	/**	 * 注册发起人	 * 	 * @param registerId	 */	public void setRegisterId(String registerId) {		this.registerId = registerId;	}	/**	 * 身份证号码	 * 	 */	public String getFdIdentityCard() {		return fdIdentityCard;	}	/**	 * 身份证号码	 * 	 * @param fdIdentityCard	 */	public void setFdIdentityCard(String fdIdentityCard) {		this.fdIdentityCard = fdIdentityCard;	}	/**	 * 头像url	 * 	 */	public String getFdIcoUrl() {		if (StringUtils.isBlank(fdIcoUrl)) {			return ComUtils.getDefaultPoto();		}		return fdIcoUrl;	}	/**	 * 头像url	 * 	 * @param fdIcoUrl	 */	public void setFdIcoUrl(String fdIcoUrl) {		this.fdIcoUrl = fdIcoUrl;	}	/**	 * 密码	 * 	 * @return	 */	public String getFdPassword() {		return fdPassword;	}	public void setFdPassword(String fdPassword) {		this.fdPassword = fdPassword;	}	/**	 * 性别	 * 	 * @return	 */	public String getFdSex() {		return fdSex;	}	public void setFdSex(String fdSex) {		this.fdSex = fdSex;	}	/**	 * 生日	 * 	 * @return	 */	public String getFdBirthDay() {		return fdBirthDay;	}	public void setFdBirthDay(String fdBirthDay) {		this.fdBirthDay = fdBirthDay;	}	/**	 * 血型	 * 	 * @return	 */	public String getFdBloodType() {		return fdBloodType;	}	public void setFdBloodType(String fdBloodType) {		this.fdBloodType = fdBloodType;	}	/**	 * 微博	 * 	 * @return	 */	public String getFdMicroBlog() {		return fdMicroBlog;	}	public void setFdMicroBlog(String fdMicroBlog) {		this.fdMicroBlog = fdMicroBlog;	}	/**	 * 证书	 * 	 * @return	 */	public String getFdCertificate() {		return fdCertificate;	}	public void setFdCertificate(String fdCertificate) {		this.fdCertificate = fdCertificate;	}	/**	 * 爱好	 * 	 * @return	 */	public String getFdHobby() {		return fdHobby;	}	public void setFdHobby(String fdHobby) {		this.fdHobby = fdHobby;	}	/**	 * 曾经爱好	 * 	 * @param fdOldHobby	 */	public String getFdOldHobby() {		return fdOldHobby;	}	public void setFdOldHobby(String fdOldHobby) {		this.fdOldHobby = fdOldHobby;	}	/**	 * 自豪	 * 	 * @return	 */	public String getFdPride() {		return fdPride;	}	public void setFdPride(String fdPride) {		this.fdPride = fdPride;	}	/**	 * 遗憾	 * 	 * @return	 */	public String getFdPity() {		return fdPity;	}	public void setFdPity(String fdPity) {		this.fdPity = fdPity;	}	/**	 * 梦想	 * 	 * @return	 */	public String getFdDram() {		return fdDram;	}	public void setFdDram(String fdDram) {		this.fdDram = fdDram;	}	/**	 * 工作经历	 * 	 * @return	 */	@OneToMany(mappedBy = "sysOrgPersonTemp", orphanRemoval = true)	@Cascade({ org.hibernate.annotations.CascadeType.ALL })	public List<WorkHistory> getWorkHistory() {		return workHistory;	}	public void setWorkHistory(List<WorkHistory> workHistory) {		this.workHistory = workHistory;	}	/**	 * 教育背景	 * 	 * @return	 */	@OneToMany(mappedBy = "sysOrgPersonTemp", orphanRemoval = true)	@Cascade({ org.hibernate.annotations.CascadeType.ALL })	public List<EducationBackground> getEducation() {		return education;	}	public void setEducation(List<EducationBackground> education) {		this.education = education;	}	private NotifyEntity notifyEntity;	@Embedded	@AttributeOverrides({			@AttributeOverride(name = "fdMobileNo", column = @Column(name = "FD_MOBILE_NO")),			@AttributeOverride(name = "fdEmail", column = @Column(name = "FD_EMAIL")),			@AttributeOverride(name = "realName", column = @Column(name = "realName")), })	public NotifyEntity getNotifyEntity() {		return notifyEntity;	}	public void setNotifyEntity(NotifyEntity notifyEntity) {		this.notifyEntity = notifyEntity;	}	@Transient	public String getRealName() {		return notifyEntity.getRealName();	}	@Transient	public String getFdEmail() {		return notifyEntity.getFdEmail();	}	@Transient	public String getFdMobileNo() {		return notifyEntity.getFdMobileNo();	}}