package cn.xdf.me.otp.model.base;import java.util.List;import javax.persistence.Entity;import javax.persistence.FetchType;import javax.persistence.JoinColumn;import javax.persistence.ManyToOne;import javax.persistence.OneToMany;import javax.persistence.PrimaryKeyJoinColumn;import javax.persistence.Table;import org.hibernate.annotations.Cache;import org.hibernate.annotations.CacheConcurrencyStrategy;import org.hibernate.annotations.Cascade;import cn.xdf.me.otp.model.core.CoreOperation;/** * 作业 *  * @author Zaric * @date 2013-6-1 上午1:10:42 */@Entity@Table(name = "IXDF_OTP_OPERTION")@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)@PrimaryKeyJoinColumn(name = "operationId")public class Operation extends CoreOperation {	/**	 * 	 */	private static final long serialVersionUID = 1L;	/**	 * 对应作业包	 */	private OperPackage operPackage;	/**	 * 对应指标	 */	private List<Index> indexs;	public Operation() {	}	public Operation(String fdId) {		this.fdId = fdId;	}	/**	 * 对应作业包	 * 	 * @return	 */	@ManyToOne(fetch = FetchType.LAZY)	@JoinColumn(name = "fdPackageId")	public OperPackage getOperPackage() {		return operPackage;	}	public void setOperPackage(OperPackage operPackage) {		this.operPackage = operPackage;	}	/**	 * 对应指标	 * 	 */	@OneToMany(mappedBy = "operation", orphanRemoval = true)	@Cascade({ org.hibernate.annotations.CascadeType.ALL })	public List<Index> getIndexs() {		return indexs;	}	public void setIndexs(List<Index> indexs) {		this.indexs = indexs;	}	@Override	public int hashCode() {		final int prime = 11;		int result = 1;		result = prime * result + getFdId().hashCode();		return result;	}	@Override	public boolean equals(Object object) {		if (object == null) {			return false;		}		if (!getClass().equals(object.getClass())) {			return false;		}		Operation other = (Operation) object;		if (!this.fdId.equals(other.fdId)) {			return false;		}		return true;	}}