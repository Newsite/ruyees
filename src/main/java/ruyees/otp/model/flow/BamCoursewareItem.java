package ruyees.otp.model.flow;import java.sql.Timestamp;import javax.persistence.Basic;import javax.persistence.Column;import javax.persistence.Entity;import javax.persistence.FetchType;import javax.persistence.JoinColumn;import javax.persistence.Lob;import javax.persistence.ManyToOne;import javax.persistence.PrimaryKeyJoinColumn;import javax.persistence.Table;import javax.persistence.Transient;import org.hibernate.annotations.Cache;import org.hibernate.annotations.CacheConcurrencyStrategy;import ruyees.otp.model.core.CoreCoursewareItem;/** *  * 新教师提交课件 * <p/> *  * <pre> *     <h2>关于存储</h2> * 1:记录新教师的提交的课件 * 2：记录指导教师对应课件的审核记录。 * </pre> *  * <pre> *     <h2>关于提交课件的流程</h2> *   1：新教师根据 ( *                  @see ruyees.otp.model.base.CoursewareItem *          ) *   （新教师需要提交的课件资料）来提交课件, *   注意这里，此类和CoursewareItem是多对一的关系， *  *   2：前台列表显示的时候： *      SELECT s from SubmitCourseware s left join s.phase p where s.chaindId is null and p.流程id= and p.人员id= *              order by s.version desc *  *   2：新教师上传一个作业，需提交后才可以上传到指导教师审核界面。 *  *   3：指导教师可以对课件进行审核通过后，会更新through字段. * </pre> * <p/> *  * <pre> *  *     此类有四个状态，属性为status * 状态(0:未上传,1:已上传，2：已提交，3：驳回，4：审核通过) * </pre> *  * @author Zaric * @date 2013-6-1 上午1:14:43 */@Entity@Table(name = "IXDF_OTP_BAM_SUBMIT_COURSEWARE")@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)@PrimaryKeyJoinColumn(name = "bamCoursewareItemId")public class BamCoursewareItem extends CoreCoursewareItem {	/**	 * 	 */	private static final long serialVersionUID = 1L;	/**	 * 对应课件分类	 */	private BamCourseware bamCourseware;	/**	 * 课件提交时间	 */	private Timestamp time;	/**	 * 对应作业提交路径 (物理磁盘路径)	 */	private String path;	/**	 * 对应作业转化后的路径	 */	private String url;	/**	 * 对应审核人ID	 */	private String approweId;	/**	 * 对应审核时间	 */	private Timestamp approweTime;	/**	 * 状态(0:未上传,1:已上传，2：已提交，3：驳回，4：审核通过)	 */	private int status;	/**	 * 版本链 如果现在是第四版本，则第四版本的父级为空 1-->2->3->4->为空	 */	private String chaindId;	/**	 * 是否通过	 */	private boolean through;	/**	 * 课件评语	 */	private String remark;	@Lob	@Basic(fetch = FetchType.LAZY)	public String getRemark() {		return remark;	}	public void setRemark(String remark) {		this.remark = remark;	}	/**	 * 课件分类	 * 	 * @return	 */	@ManyToOne(fetch = FetchType.LAZY)	@JoinColumn(name = "bamCoursewareId")	public BamCourseware getBamCourseware() {		return bamCourseware;	}	/**	 * 课件分类	 * 	 * @param bamCourseware	 */	public void setBamCourseware(BamCourseware bamCourseware) {		this.bamCourseware = bamCourseware;	}	/**	 * 课件提交时间	 * 	 * @return	 */	@Column(name = "fdTime")	public Timestamp getTime() {		return time;	}	/**	 * 课件提交时间	 * 	 * @param time	 */	public void setTime(Timestamp time) {		this.time = time;	}	/**	 * 作业提交的路径	 * 	 * @return	 */	public String getPath() {		return path;	}	public void setPath(String path) {		this.path = path;	}	public String getUrl() {		return url;	}	public void setUrl(String url) {		this.url = url;	}	/**	 * 审核人ID	 * 	 * @return	 */	public String getApproweId() {		return approweId;	}	/**	 * 审核人ID	 * 	 * @param approweId	 */	public void setApproweId(String approweId) {		this.approweId = approweId;	}	/**	 * 课件审核时间	 * 	 * @return	 */	public Timestamp getApproweTime() {		return approweTime;	}	/**	 * 课件审核时间	 * 	 * @param approweTime	 */	public void setApproweTime(Timestamp approweTime) {		this.approweTime = approweTime;	}	/**	 * 状态(0:未上传,1:已上传，2：已提交，3：驳回，4：审核通过)	 * 	 * @return	 */	@Column(name = "FD_STATUS")	public int getStatus() {		return status;	}	/**	 * 状态(0:未上传,1:已上传，2：已提交，3：驳回，4：审核通过)	 * 	 * @param status	 */	public void setStatus(int status) {		this.status = status;	}	/**	 * 版本链 如果现在是第四版本，则第四版本的父级为空	 * 	 * @return	 */	@Column(length = 32)	public String getChaindId() {		return chaindId;	}	/**	 * 版本链 如果现在是第四版本，则第四版本的父级为空	 * 	 * @param chaindId	 */	public void setChaindId(String chaindId) {		this.chaindId = chaindId;	}	/**	 * 是否通过	 * 	 * @return	 */	public boolean isThrough() {		return through;	}	/**	 * 是否通过	 * 	 * @param through	 */	public void setThrough(boolean through) {		this.through = through;	}	/**	 * 提交按钮的class 状态(0:未上传,1:已上传，2：已提交，3：驳回，4：审核通过)	 * 	 * @return	 */	@Transient	public String getSubmitButtonClass() {		if (status == 0 || status == 2 || status == 3 || status == 4) {			return "disabled";		}		return "";	}	/**	 * 查看按钮的class 状态(0:未上传,1:已上传，2：已提交，3：驳回，4：审核通过)	 * 	 * @return	 */	@Transient	public String getSeeButtonClass() {		if (status == 0) {			return "disabled";		}		return "";	}}