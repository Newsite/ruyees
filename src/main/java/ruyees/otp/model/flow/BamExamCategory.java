package ruyees.otp.model.flow;import ruyees.otp.model.BamProcess;import ruyees.otp.model.base.ExamOption;import ruyees.otp.model.core.CoreExamCategory;import org.hibernate.annotations.Cache;import org.hibernate.annotations.CacheConcurrencyStrategy;import com.fasterxml.jackson.annotation.JsonIgnore;import javax.persistence.*;import java.util.List;/** *  * <pre> * 新教师备课前台校验： * 1：新教师如果没有考试通过，则提示新教师考试未通过，是否继续参加考试或者查看视频。 * 2：新教师如果考试通过，则校验新教师针对此步骤的所有考试是否都已经通过， *   2.1：如果全部通过，则提示新教师参加下一关 *   2.2：如果未全部通过，则提示新教师参加下一试卷 * </pre> *  * @author Zaric * @date 2013-6-1 上午1:15:17 */@Entity@Table(name = "IXDF_OTP_BAM_EXAM_LOG")@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)@PrimaryKeyJoinColumn(name = "bamExamCategoryId")public class BamExamCategory extends CoreExamCategory implements BamProcess {	/**	 * 	 */	private static final long serialVersionUID = 1L;	/**	 * 对应流程步骤记录	 */	private BamProjectPhase phase;	/**	 * 是否通过	 */	private boolean through;	/**	 * 对应新教师的考试记录	 */	private List<BamExam> bamExams;	/**	 * 答题内容	 */	private List<ExamOption> examOptions;	@Transient	@JsonIgnore	public List<ExamOption> getExamOptions() {		return examOptions;	}	public void setExamOptions(List<ExamOption> examOptions) {		this.examOptions = examOptions;	}	/**	 * 流程步骤记录	 * 	 * @return	 */	@ManyToOne(fetch = FetchType.LAZY)	@JoinColumn(name = "phaseId")	@JsonIgnore	public BamProjectPhase getPhase() {		return phase;	}	/**	 * 流程步骤记录	 * 	 * @param phase	 */	public void setPhase(BamProjectPhase phase) {		this.phase = phase;	}	/**	 * 是否通过	 * 	 * @return	 */	public boolean getThrough() {		return through;	}	/**	 * 是否通过	 * 	 * @param through	 */	public void setThrough(boolean through) {		this.through = through;	}	/**	 * 对应新教师的考试记录	 * 	 * @return	 */	@OneToMany(cascade = { CascadeType.PERSIST, CascadeType.REFRESH,			CascadeType.REMOVE, CascadeType.MERGE }, fetch = FetchType.LAZY, mappedBy = "bamExamCategory")	@JsonIgnore	// @OrderBy("fdOrder asc")	public List<BamExam> getBamExams() {		return bamExams;	}	/**	 * 对应新教师的考试记录	 * 	 * @param bamExams	 */	public void setBamExams(List<BamExam> bamExams) {		this.bamExams = bamExams;	}}