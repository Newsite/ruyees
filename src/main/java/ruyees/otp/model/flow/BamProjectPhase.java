package ruyees.otp.model.flow;import java.sql.Timestamp;import java.util.List;import javax.persistence.CascadeType;import javax.persistence.Column;import javax.persistence.Entity;import javax.persistence.FetchType;import javax.persistence.JoinColumn;import javax.persistence.ManyToOne;import javax.persistence.OneToMany;import javax.persistence.OneToOne;import javax.persistence.OrderBy;import javax.persistence.Table;import javax.persistence.Transient;import javax.persistence.UniqueConstraint;import org.apache.commons.lang3.StringUtils;import org.hibernate.annotations.Cache;import org.hibernate.annotations.CacheConcurrencyStrategy;import org.hibernate.annotations.Cascade;import ruyees.otp.model.BamAbsPhase;import ruyees.otp.model.sys.SysOrgPerson;import ruyees.otp.model.template.TemplateContent;import ruyees.otp.utils.PhaseUtils;/** *  * 备课流程步骤记录 * <p/> *  * <pre> * 记录备课流程的步骤 * </pre> * <p/> *  * <pre> *     针对获取资源：可以通过此实体获取视频， * </pre> *  * @author Zaric * @date 2013-6-1 上午1:17:28 */@Entity@Table(name = "IXDF_OTP_BAM_PROJECT_PHASE", uniqueConstraints = { @UniqueConstraint(columnNames = {		"newteachId", "stageId", "fdIndex", "through" }) })@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)public class BamProjectPhase extends BamAbsPhase {	/**	 * 	 */	private static final long serialVersionUID = 1L;	/**	 * 对应备课流程记录	 */	private BamStage stage;	/**	 * 对应备课模板的步骤	 */	private TemplateContent content;	/**	 * 对应新教师Id	 */	private String newteachId;	/**	 * 对应指导教师ID	 */	private String guidId;	/**	 * 进入备课流程步骤时间	 */	private Timestamp startTime;	/**	 * 离开备课流程步骤时间	 */	private Timestamp endTime;	/**	 * 经历时常	 */	private Long fdTime;	/**	 * 评语	 */	private String comment;	/**	 * 批课次数	 */	private int appofClassCount;	/**	 * 批课状态	 */	private int appofClassStatus;	/**	 * 审核时间	 */	private Timestamp appTime;	/**	 * 流程步骤 新教师提交的课件	 */	private List<BamCourseware> coursewares;	/**	 * 流程步骤 新教师查看的文档或者视频	 */	private List<BamSeeCw> cws;	/**	 * 流程步骤 新教师提交的作业包	 */	private BamPackage bamPackage;	/**	 * 流程步骤 新教师答题记录	 */	private List<BamExamCategory> examCategories;	/**	 * 流程步骤 批课计划打分表	 */	private List<Grade> grades;	/**	 * 是否通过	 */	private boolean through;	/**	 * 顺序	 */	private int fdIndex;	/**	 * 属性值	 */	private String filed;	/**	 * 经过此步骤的次数 主要针对答题次数	 */	private int fdtime;	/**	 * 流程步骤 批课计划打分	 * 	 * @return	 */	@OneToMany(cascade = { CascadeType.PERSIST, CascadeType.REFRESH,			CascadeType.MERGE }, fetch = FetchType.LAZY, mappedBy = "phase")	public List<Grade> getGrades() {		return grades;	}	/**	 * 流程步骤 批课计划打分	 * 	 * @param grades	 */	public void setGrades(List<Grade> grades) {		this.grades = grades;	}	/**	 * 流程步骤 新教师答题记录	 * 	 * @return	 */	@OneToMany(cascade = { CascadeType.PERSIST, CascadeType.REFRESH,			CascadeType.MERGE }, fetch = FetchType.LAZY, mappedBy = "phase")	@OrderBy("fdName asc")	public List<BamExamCategory> getExamCategories() {		return examCategories;	}	/**	 * 流程步骤 新教师答题记录	 * 	 * @param examCategories	 */	public void setExamCategories(List<BamExamCategory> examCategories) {		this.examCategories = examCategories;	}	/**	 * 对应作业包	 * 	 * @return	 */	@OneToOne(mappedBy = "phase")	@Cascade({ org.hibernate.annotations.CascadeType.MERGE,			org.hibernate.annotations.CascadeType.PERSIST,			org.hibernate.annotations.CascadeType.REFRESH })	public BamPackage getBamPackage() {		return bamPackage;	}	/**	 * 对应作业包	 * 	 * @param bamPackage	 */	public void setBamPackage(BamPackage bamPackage) {		this.bamPackage = bamPackage;	}	/**	 * 流程步骤 新教师查看的文档或者视频	 * 	 * @return	 */	@OneToMany(cascade = { CascadeType.PERSIST, CascadeType.REFRESH,			CascadeType.MERGE }, fetch = FetchType.LAZY, mappedBy = "phase")	@OrderBy("fdName asc")	public List<BamSeeCw> getCws() {		return cws;	}	/**	 * 流程步骤 新教师查看的文档或者视频	 * 	 * @param cws	 */	public void setCws(List<BamSeeCw> cws) {		this.cws = cws;	}	/**	 * 流程步骤	 * <p/>	 * 	 * <pre>	 * 新教师提交的课件	 * </pre>	 * 	 * @return	 */	@OneToMany(cascade = { CascadeType.PERSIST, CascadeType.REFRESH,			CascadeType.MERGE }, fetch = FetchType.LAZY, mappedBy = "phase")	public List<BamCourseware> getCoursewares() {		return coursewares;	}	/**	 * 流程步骤	 * <p/>	 * 	 * <pre>	 * 新教师提交的课件	 * </pre>	 * 	 * @param coursewares	 */	public void setCoursewares(List<BamCourseware> coursewares) {		this.coursewares = coursewares;	}	/**	 * 对应备课流程	 * 	 * @return	 */	@ManyToOne(fetch = FetchType.LAZY)	@JoinColumn(name = "stageId", nullable = false)	public BamStage getStage() {		return stage;	}	/**	 * 对应备课流程	 * 	 * @param stage	 */	public void setStage(BamStage stage) {		this.stage = stage;	}	/**	 * 对应模板步骤	 * 	 * @return	 */	@ManyToOne(fetch = FetchType.LAZY)	@JoinColumn(name = "contentId")	public TemplateContent getContent() {		return content;	}	/**	 * 对应模板步骤	 * 	 * @param content	 */	public void setContent(TemplateContent content) {		this.content = content;	}	/**	 * 对应新教师ID	 * 	 * @return	 */	@Column(nullable = false, name = "NEWTEACHID")	public String getNewteachId() {		return newteachId;	}	/**	 * 对应新教师ID	 * 	 * @param newteachId	 */	public void setNewteachId(String newteachId) {		this.newteachId = newteachId;	}	/**	 * 对应指导教师ID	 * 	 * @return	 */	@Column(name = "GUIDID")	public String getGuidId() {		return guidId;	}	/**	 * 对应指导教师ID	 * 	 * @param guidId	 */	public void setGuidId(String guidId) {		this.guidId = guidId;	}	/**	 * 进入备课步骤时间	 * 	 * @return	 */	@Column(name = "STARTTIME")	public Timestamp getStartTime() {		return startTime;	}	/**	 * 进入备课步骤时间	 * 	 * @param startTime	 */	public void setStartTime(Timestamp startTime) {		this.startTime = startTime;	}	/**	 * 离开备课步骤时间	 * 	 * @return	 */	@Column(name = "ENDTIME")	public Timestamp getEndTime() {		return endTime;	}	/**	 * 离开备课步骤时间	 * 	 * @param endTime	 */	public void setEndTime(Timestamp endTime) {		this.endTime = endTime;	}	/**	 * 经历时长	 * 	 * @return	 */	@Column(name = "FDTIME")	public Long getFdTime() {		return fdTime;	}	/**	 * 经历时长	 * 	 * @param fdTime	 */	public void setFdTime(Long fdTime) {		this.fdTime = fdTime;	}	/**	 * 评语	 * 	 * @return	 */	@Column(name = "FDCOMMON")	public String getComment() {		return comment;	}	/**	 * 评语	 * 	 * @param comment	 */	public void setComment(String comment) {		this.comment = comment;	}	/**	 * 批课次数	 * 	 * @return	 */	@Column(name = "APPOFCLASSCOUNT")	public int getAppofClassCount() {		return appofClassCount;	}	/**	 * 批课次数	 * 	 * @param appofClassCount	 */	public void setAppofClassCount(int appofClassCount) {		this.appofClassCount = appofClassCount;	}	/**	 * 批课状态	 * 	 * @return	 */	@Column(name = "APPOFCLASSSTATUS")	public int getAppofClassStatus() {		return appofClassStatus;	}	/**	 * 批课状态	 * 	 * @param appofClassStatus	 */	public void setAppofClassStatus(int appofClassStatus) {		this.appofClassStatus = appofClassStatus;	}	/**	 * 审核时间	 * 	 * @return	 */	@Column(name = "APPTIME")	public Timestamp getAppTime() {		return appTime;	}	/**	 * 审核时间	 * 	 * @param appTime	 */	public void setAppTime(Timestamp appTime) {		this.appTime = appTime;	}	/**	 * 是否通过	 * 	 * @return	 */	@Column(name = "THROUGH")	public boolean getThrough() {		return through;	}	/**	 * 是否通过	 * 	 * @param through	 */	public void setThrough(boolean through) {		this.through = through;	}	/**	 * 顺序	 * 	 * @return	 */	@Column(nullable = false, name = "FDINDEX")	public int getFdIndex() {		return fdIndex;	}	/**	 * 顺序	 * 	 * @param fdIndex	 */	public void setFdIndex(int fdIndex) {		this.fdIndex = fdIndex;	}	@Column(name = "FDFIELD")	public String getFiled() {		if (StringUtils.isBlank(filed)) {			if (stage == null) {				return null;			}			return PhaseUtils.fetchField(stage.getFdIndex(), fdIndex);		}		return filed;	}	public void setFiled(String filed) {		this.filed = filed;	}	private SysOrgPerson newTeach;	@Transient	public SysOrgPerson getNewTeach() {		return newTeach;	}	public void setNewTeach(SysOrgPerson newTeach) {		this.newTeach = newTeach;	}	/**	 * 经过此步骤的次数 主要针对答题次数	 * 	 * @return	 */	// @Column(name="FDTHRTIME")	@Transient	public Integer getFdtime() {		return fdtime;	}	/**	 * 经过此步骤的次数 主要针对答题次数	 * 	 * @param fdtime	 */	public void setFdtime(Integer fdtime) {		this.fdtime = fdtime;	}}