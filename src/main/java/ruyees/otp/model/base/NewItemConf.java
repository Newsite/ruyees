package ruyees.otp.model.base;import javax.persistence.Entity;import javax.persistence.FetchType;import javax.persistence.JoinColumn;import javax.persistence.ManyToOne;import javax.persistence.Table;import org.hibernate.annotations.Cache;import org.hibernate.annotations.CacheConcurrencyStrategy;import ruyees.otp.model.IdEntity;import ruyees.otp.model.template.TemplateContent;/** * 新教师评分分项 *  * @author Zaric * @date 2013-6-1 上午1:10:25 */@Entity@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)@Table(name = "IXDF_OTP_NEW_ITEM_CONF")public class NewItemConf extends IdEntity {	/**	 * 	 */	private static final long serialVersionUID = 1L;	/**	 * 名称	 */	private String fdName;	/**	 * 顺序	 */	private int fdIndex;	/**	 * 标准分	 */	private int fdValue;	/**	 * 分项说明	 */	private String fdRemarker;	/**	 * 对应步骤	 */	private TemplateContent templateContent;	/**	 * 名称	 * 	 * @return	 */	public String getFdName() {		return fdName;	}	/**	 * 名称	 * 	 * @param fdName	 */	public void setFdName(String fdName) {		this.fdName = fdName;	}	/**	 * 排序号	 * 	 * @return	 */	public int getFdIndex() {		return fdIndex;	}	/**	 * 排序号	 * 	 * @param fdIndex	 */	public void setFdIndex(int fdIndex) {		this.fdIndex = fdIndex;	}	/**	 * 标准分	 * 	 * @return	 */	public int getFdValue() {		return fdValue;	}	/**	 * 标准分	 * 	 * @param fdValue	 */	public void setFdValue(int fdValue) {		this.fdValue = fdValue;	}	/**	 * 备注	 * 	 * @return	 */	public String getFdRemarker() {		return fdRemarker;	}	/**	 * 备注	 * 	 * @param fdRemarker	 */	public void setFdRemarker(String fdRemarker) {		this.fdRemarker = fdRemarker;	}	/**	 * 流程步骤	 * 	 * @return	 */	@ManyToOne(fetch = FetchType.LAZY)	@JoinColumn(name = "fdTemplateContentId")	public TemplateContent getTemplateContent() {		return templateContent;	}	/**	 * 流程步骤	 * 	 * @param templateContent	 */	public void setTemplateContent(TemplateContent templateContent) {		this.templateContent = templateContent;	}	@Override	public int hashCode() {		final int prime = 11;		int result = 1;		result = prime * result + getFdId().hashCode();		return result;	}	@Override	public boolean equals(Object object) {		if (object == null) {			return false;		}		if (!getClass().equals(object.getClass())) {			return false;		}		NewItemConf other = (NewItemConf) object;		if (!this.fdId.equals(other.fdId)) {			return false;		}		return true;	}}